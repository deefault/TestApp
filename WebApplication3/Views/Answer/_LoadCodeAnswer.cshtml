@model CodeAnswer
<form method="post">
    <div>
        <b>Текст вопроса:</b>
        <div>
            <div class="form-group clearfix contentwrapper">
                <div class="form-control unselectable" style="height: auto" readonly>@Model.Question.Title</div>
            </div>
        </div>
        @if (Model.TestResult.IsCompleted)
        {
            <h5>Балл: @Model.Score/@Model.Question.Score</h5>
        }
    </div>
    <input type="hidden" value="@Model.Id">
    <fieldset id="options">
        <div class="main">
            @if (Model.Code != null)
            {
                <div class="form-group clearfix contentwrapper" id="item-table__body">
                    <textarea class="form-control" id="code">@Model.Code.Value</textarea>
                    <span class="aside">
                        <em><b>Ctrl-Space</b>: autocomplete</em>
                    </span>
                </div>
            }
            else
            {
                <div class="form-group clearfix contentwrapper" id="item-table__body">
                    <textarea class="form-control" id="code">
using System;

namespace TestsApp
{
    public class Program
    {
        public string Main(string message)
        {
            return message;
        }
    }
}</textarea>
                    <span class="aside">
                        <em><b>Ctrl-Space</b>: autocomplete</em>
                    </span>
                </div>
            }
            <div style="margin-bottom: 1rem">
                <b>Аргументы:</b>
                <div class="input-group">
                    <input id="args" @(Model.TestResult.IsCompleted ? "disabled" : "") value="@(Model.Code != null ? Model.Code.Args : "Hello World")" class="form-control">
                    <span class="input-group-append">
                        <button @(Model.TestResult.IsCompleted ? "disabled" : "") class="btn btn-success" id="compile">Запуск</button>
                    </span>
                </div>
                <span class="aside">
                    <em>Use <b>;</b> to separate multiple</em>
                </span>
            </div>
        </div>
        @if (Model.TestResult.IsCompleted)
        {
            if (Model.Score != Model.Question.Score && !Model.TestResult.Test.HideRightAnswers)
            {
                <table class="table-borderless table">
                    <tr>
                        <td width="50%" style="padding-left:0;">
                            <div id="outputDiv">
                                <div>
                                    <b>Ваш вывод:</b>
                                    <pre id="userOutput" class="form-control output" readonly="">@Model.Code.Output</pre>
                                </div>
                            </div>
                        </td>
                        <td width="50%" style="padding-right:0">
                            <div>
                                <b>Верный вывод:</b>
                                <pre id="creatorOutput" class="form-control output" readonly="">@((Model.Question as CodeQuestion).Code.Output)</pre>
                            </div>
                        </td>
                    </tr>
                </table>
                <script>
                    $("#compile").click(function (e) {
                        return false;
                    });</script>
            }
            else
            {
                <div id="outputDiv">
                    <div>
                        <b>Вывод:</b>
                        <pre id="userOutput" class="form-control output" readonly="">@Model.Code.Output</pre>
                    </div>
                </div>
            }
        }
        else
        {
            <div id="outputDiv">
                <div>
                    <b>Вывод:</b>
                    <pre id="output" class="form-control output" readonly=""></pre>
                </div>
            </div>
            <script>
                loadOutput("/Code/" + getActiveAnswerId() + "/");
                var elements =
                {
                    args: $("#args"),
                    compile: $("#compile"),
                    output: $("#output"),
                    code: $("#code"),
                };
                elements.compile.click(function (e) {
                    e.preventDefault();
                    ShowOutput("Waiting for server...");
                    Compile();
                });
                function ShowOutput(output) {
                    $("#output").html(output);
                }
                function Compile() {
                    submitCode("/Code/" + getActiveAnswerId() + "/");
                    loadOutput("/Code/" + getActiveAnswerId() + "/");
                }</script>
        }
        <script>
            var editor = CodeMirror.fromTextArea(document.getElementById('code'),
                {
                    lineNumbers: true,
                    mode: "text/x-csharp",
                    theme: "material",
                    autoCloseBrackets: true,
                    matchBrackets: true,
                    styleActiveLine: true,
                    styleActiveSelected: true,
                    showCursorWhenSelecting: true,
                    indentUnit: 4,
                    tabSize: 4,
                    keyMap: "sublime",
                    rulers: [{ column: 80, lineStyle: "dashed" }],
                    foldGutter: true,
                    gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
                    extraKeys: { "Ctrl-Space": "autocomplete" }
                });
            $(".CodeMirror").addClass("contentwrapper");
        </script>
    </fieldset>
</form>